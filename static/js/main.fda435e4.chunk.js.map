{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","persentage","className","s","data","FeedbackOptions","options","onLeaveFeedback","map","name","type","button","onClick","e","Section","title","children","section","Notification","message","propType","PropTypes","string","isRequired","App","state","props","handleIncrement","setState","this","countTotalFeedback","Math","round","totalSum","countPositiveFeedbackPercentage","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,qBCAjGD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,iBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,iMCcbC,EAZI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC7C,OACI,qCACI,oBAAGC,UAAWC,IAAEC,KAAhB,kBAA4BP,KAC5B,oBAAGK,UAAWC,IAAEC,KAAhB,qBAA+BN,KAC/B,oBAAGI,UAAWC,IAAEC,KAAhB,kBAA4BL,KAC5B,oBAAGG,UAAWC,IAAEH,MAAhB,oBAA+BA,KAC/B,oBAAGE,UAAWC,IAAEF,WAAhB,gCAAgDA,EAAhD,W,gBCQGI,EAfS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACpB,8BACKD,EAAQE,KAAI,SAACC,GACV,OAAO,wBAAmBC,KAAK,SAASR,UAAWC,IAAEQ,OAAQC,QAAS,SAACC,GAAD,OAAON,EAAgBE,IAAtF,SACFA,GADeA,S,gBCUjBK,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OAAO,sBAAKd,UAAWC,IAAEc,QAAlB,UACFF,GAAS,6BAAKA,IACdC,M,kCCJHE,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAO,mBAAGjB,UAAWC,IAAEgB,QAAhB,SAA0BA,KAGtBD,IAEfA,EAAaE,SAAW,CACpBD,QAASE,IAAUC,OAAOC,Y,ICHxBC,E,4MAOJC,MAAQ,CACN5B,KAAM,EAAK6B,MAAM7B,KACjBC,QAAS,EAAK4B,MAAM5B,QACpBC,IAAK,EAAK2B,MAAM3B,K,EAGlB4B,gBAAkB,SAAClB,GACjB,EAAKmB,UAAS,SAAAH,GACZ,OAAO,eAAGhB,EAAOgB,EAAMhB,GAAQ,O,wDAKnC,WACE,MAA+BoB,KAAKJ,MAEpC,OAFA,EAAQ5B,KAAR,EAAcC,QAAd,EAAuBC,M,6CAKzB,WACE,IAAQF,EAASgC,KAAKJ,MAAd5B,KACFG,EAAQ6B,KAAKC,qBACnB,OAAQ9B,EAAQ,EAAI+B,KAAKC,MAAOnC,EAAOG,EAAS,KAAO,I,oBAGzD,WACE,MAA+B6B,KAAKJ,MAA5B5B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBkC,EAAWJ,KAAKC,qBAEtB,OACE,qCACE,cAAC,EAAD,CAASf,MAAM,4BAAf,SACE,cAAC,EAAD,CACET,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBsB,KAAKF,oBAI1B,cAAC,EAAD,CAASZ,MAAM,aAAf,SACGkB,EAAW,EACT,cAAC,EAAD,CAAcd,QAAQ,sBACtB,cAAC,EAAD,CAAYtB,KAAMA,EACjBC,QAASA,EACTC,IAAKA,EACLC,MAAOiC,EACPhC,WAAY4B,KAAKK,6C,GApDbC,aAAZX,EACGY,aAAe,CACpBvC,KAAM,EACNC,QAAS,EACTC,IAAK,GA0DMyB,QChEfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fda435e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"data\":\"Statistics_data__2Xw5g\",\"total\":\"Statistics_total__17vUK\",\"persentage\":\"Statistics_persentage__3QR-w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1uRIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__o2bhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__wJA5V\"};","import PropTypes from 'prop-types';\r\nimport s from \"./Statistics.module.css\"\r\n\r\nconst Statistics = ({ good, neutral, bad, total, persentage }) => {\r\n    return (\r\n        <>\r\n            <p className={s.data}>Good:{good}</p>\r\n            <p className={s.data}>Neutral:{neutral}</p>\r\n            <p className={s.data}>Bad: {bad}</p>\r\n            <p className={s.total}>Total: {total}</p>\r\n            <p className={s.persentage}>Positive feedback: {persentage}%</p>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    persentage: PropTypes.number.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n    <div>\r\n        {options.map((name) => {\r\n            return <button key={name} type=\"button\" className={s.button} onClick={(e) => onLeaveFeedback(name)}>\r\n                {name}\r\n\r\n            </button>\r\n        })}\r\n    </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n\r\nimport s from \"./Section.module.css\"\r\n\r\nconst Section = ({ title, children }) => {\r\n    return <div className={s.section}>\r\n        {title && <h2>{title}</h2>}\r\n        {children}\r\n    </div>\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n    return <p className={s.message}>{message}</p>\r\n}\r\n\r\nexport default Notification;\r\n\r\nNotification.propType = {\r\n    message: PropTypes.string.isRequired,\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Statistics from \"./components/Statistics\"\nimport FeedbackOptions from \"./components/FeedbackOptions\"\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\"\n\nclass App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  handleIncrement = (name) => {\n    this.setState(state => {\n      return { [name]: state[name] + 1 };\n      // return { value: prevState.value + 1 }\n    });\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = good + neutral + bad;\n    return totalFeedback;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return (total > 0 ? Math.round((good / total) * 100) : 0);\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalSum = this.countTotalFeedback();\n\n    return (\n      <>\n        <Section title=\"Please leave the feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {totalSum < 1 ?\n            (<Notification message=\"No feedback given\"></Notification>) :\n            (<Statistics good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalSum}\n              persentage={this.countPositiveFeedbackPercentage()} />)\n          }\n        </Section>\n\n      </>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}